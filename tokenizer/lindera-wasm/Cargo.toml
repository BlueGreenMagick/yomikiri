
[package]
name = "lindera-wasm"
version = "0.1.0"
authors = ["BlueGreenMagick <bluegreenmagick@gmail.com>"]
edition = "2021"
description = "A lidera japanese tokenizer wrapper for javascript and typescript"
license = "MIT"

[lib]
crate-type = ["cdylib", "rlib", "staticlib"]

[[bin]]
# This can be whatever name makes sense for your project, but the rest of this tutorial assumes uniffi-bindgen.
name = "uniffi-bindgen"
path = "uniffi-bindgen.rs"
required-features = ["uniffi"]

[features]
default=["wasm"]
wasm = ["dep:wasm-bindgen", "dep:web-sys", "dep:wee_alloc", "console_error_panic_hook", "dep:serde-wasm-bindgen", "dep:serde"]
uniffi = ["dep:uniffi"]

[dependencies]
lindera = { version = "0.23.1", features = ["ipadic"]}

wasm-bindgen = { version="0.2.63", optional=true }
web-sys = { version="0.3", features=["Window", "Performance", "console"], optional=true }
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }
# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

serde-wasm-bindgen = { version="0.5", optional=true }
serde = { version = "1.0", features = ["derive"], optional=true}

uniffi = { git = "https://github.com/BlueGreenMagick/uniffi-rs.git", branch = "custom", features=["cli"], optional=true}

[build-dependencies]
uniffi = { git = "https://github.com/BlueGreenMagick/uniffi-rs.git", branch = "custom", features = [ "build" ], optional=true}

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"