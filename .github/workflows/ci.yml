name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  JMDICT_PATH: crates/yomikiri-dictionary-generator/jmdict/jmdict_english.xml
  JMNEDICT_PATH: crates/yomikiri-dictionary-generator/jmdict/jmnedict.xml
  DICTIONARY_PATH: crates/yomikiri-dictionary-generator/files/english.yomikiridict
  UNIDIC_OUTPUT_PATH: crates/unidic/output

jobs:
  test:
    runs-on: macos-14
    timeout-minutes: 45
    name: 'Lint, Test, Build web extension'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 50

      - name: Install pnpm
        uses: pnpm/action-setup@v3.0.0
        with:
          version: 'next-9'

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install cargo
        uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
        with:
          toolchain: 1.85.0
          targets: aarch64-apple-ios
          components: clippy, rustfmt

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm deps
        run: pnpm install

      - name: Get version
        id: version
        run: echo "VERSION=$(task --silent print-version)" >> "$GITHUB_OUTPUT"

      - name: Hash root Cargo.toml and Cargo.lock
        id: cargo-hash
        run: echo "HASH=${{hashFiles('./Cargo.lock', './Cargo.toml')}}" >> "$GITHUB_OUTPUT"

      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84

      - name: Cache Task Checksums
        uses: actions/cache@v4
        with:
          path: .task/
          key: task-checksum

      - name: Formatting
        run: task check-format

      - name: Install wasm-pack
        run: pnpm add -g wasm-pack

      - name: Cache generated/
        uses: actions/cache@v4
        with:
          path: generated/
          key: generated

      - name: Build
        run: task build:all

      - name: Lint
        run: task lint

      - name: Test
        run: task test
