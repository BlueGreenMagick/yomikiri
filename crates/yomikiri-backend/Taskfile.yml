version: '3'

run: 'when_changed'

includes:
  rust-shared:
    taskfile: ../../extra/taskfile/Rust-Taskfile.yml
    flatten: true
    excludes: [check, lint, test]

vars:
  PROJECT_ROOT: '../../'
  ROOT_CARGO_TOML: '../../Cargo.toml'
  ROOT_CARGO_LOCK: '../../Cargo.lock'
  WASM_DIR: './pkg'

  TARGET_WASM: 'wasm32-unknown-unknown'

tasks:
  check:
    desc: 'Check files'
    cmds:
      - 'cargo check --target {{.TARGET_WASM}}'

  lint:
    desc: 'Lint files'
    cmds:
      - 'cargo clippy --target {{.TARGET_WASM}} -- -D warnings'

  test:
    desc: 'Test files'
    cmds:
      - 'cargo test'

  generate:
    cmds:
      - task: 'generate:wasm'

  generate:wasm:
    desc: Build wasm backend
    cmds:
      - task: _clean-dir-if-release
        vars:
          DIR: '{{.WASM_DIR}}'
      - 'wasm-pack build {{if not .RELEASE}}--dev{{end}} -d "{{.WASM_DIR}}" --scope yomikiri --target web'

  generate:release:wasm:
    desc: Build wasm backend for release
    cmds:
      - task: generate:wasm
        vars:
          RELEASE: '1'

  # Rust lib build skip is delegated to cargo
  _build:lib:
    internal: true
    requires:
      vars: [TARGET]
    vars:
      FLAG_RELEASE: '{{if .RELEASE}}--release{{end}}'
      FLAG_TARGET: '{{if .TARGET}}--target {{.TARGET}}{{end}}'
    cmds:
      - 'cargo build --lib {{.FLAG_RELEASE}} {{.FLAG_TARGET}}'

  clean:
    desc: Remove build artifacts created by taskfile.
    cmds:
      - 'rm -rf {{.WASM_DIR}}'

  # Cleans dir if `{{.RELEASE}}` is set
  _clean-dir-if-release:
    internal: true
    requires:
      vars: [DIR]
    cmds:
      - task: '{{if .RELEASE}}_clean-dir{{else}}_void{{end}}'
        vars:
          DIR: '{{.DIR}}'

  _clean-dir:
    internal: true
    requires:
      vars: [DIR]
    cmds:
      - 'rm -rf {{.DIR}}'

  # Empty task used for `task:{{if}}some_task{{else}}_void{{end}}`
  _void:
    internal: true
