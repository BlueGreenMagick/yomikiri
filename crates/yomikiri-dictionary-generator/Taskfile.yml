version: '3'

includes:
  rust-shared:
    taskfile: ../../extra/taskfile/Rust-Taskfile.yml
    flatten: true

vars:
  PROJECT_ROOT: '../..'
  JMDICT_DIR: '{{.PROJECT_ROOT}}/generated/jmdict'
  YOMIKIRIDICT_PATH: '{{.PROJECT_ROOT}}/generated/dictionary-files/english.yomikiridict'
  CRATE_BINARY: '{{.PROJECT_ROOT}}/target/release/yomikiri-dictionary-generator'

tasks:
  download:
    # Build-skipping is done within rust script
    desc: Downloads jmdict file if it does not exist at output path
    cmds:
      - task: _build
      - '{{.CRATE_BINARY}} download --outdir="{{.JMDICT_DIR}}"'

  fresh:
    desc: Force downloads a fresh jmdict file
    cmds:
      - task: _build
      - '{{.CRATE_BINARY}} download --outdir="{{.JMDICT_DIR}} --new"'

  generate:
    desc: Generate dictionary file from jmdict file
    cmds:
      - task: _build
      - task: _generate

  download-and-generate:
    desc: 'Generate dictionary file. Download JMDICT if it does not exist.'
    cmds:
      - task: 'download'
      - task: 'generate'

  _build:
    cmds:
      - 'cargo build --release'

  _generate:
    sources:
      - '{{.CRATE_BINARY}}'
      - '{{.JMDICT_DIR}}/**/*'
      - exclude: '**/.*'
    generates:
      - '{{.YOMIKIRIDICT_PATH}}'
    cmds:
      - '{{.CRATE_BINARY}} generate --rawdir="./{{.JMDICT_DIR}}" --out="{{.YOMIKIRIDICT_PATH}}"'
